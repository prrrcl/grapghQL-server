type Cliente {
  id: ID
  name: String
  surname: String
  company: String
  emails : [Email]
  tipo: TipoCliente
  pedidos: [Pedido]
}
type Email {
  email: String
}
type Pedido {
  producto: String
  precio: Int
}
enum TipoCliente {
  BASICO
  PREMIUM
}
type Query {
  getTotal: String
  getCliente(id: ID) : Cliente
  getClientes(limit: Int, offset: Int) : [Cliente]
}
input PedidoInput {
  producto: String
  precio: Int
}

input ClienteInput {
  id: ID
  name: String
  surname: String
  company: String
  emails: [EmailInput]
  tipo: TipoCliente
  pedidos: [PedidoInput]
}
input EmailInput {
  email: String
}

type Mutation {
  crearCliente(input: ClienteInput) : Cliente
  actualizarCliente(input: ClienteInput) : Cliente
  eliminarCliente(id: ID!) : String
  userCreate(user: String!, password: String! ) : String
}